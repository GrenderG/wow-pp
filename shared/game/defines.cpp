//
// This file is part of the WoW++ project.
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Genral Public License as published by
// the Free Software Foudnation; either version 2 of the Licanse, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software 
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// World of Warcraft, and all World of Warcraft or Warcraft art, images,
// and lore are copyrighted by Blizzard Entertainment, Inc.
// 

#include "defines.h"

namespace wowpp
{
	namespace game
	{
		namespace constant_literal
		{
			const SpellEffectStrings::StringArray strings =
			{
				"<INVALID>",
				"INSTANT_KILL",
				"SCHOOL_DAMAGE",
				"DUMMY",
				"PORTAL_TELEPORT",
				"TELEPORT_UNITS",
				"APPLY_AURA",
				"ENVIRONMENTAL_DAMAGE",
				"POWER_DRAIN",
				"HEALTH_LEECH",
				"HEAL",
				"BIND",
				"PORTAL",
				"RITUAL_BASE",
				"RITUAL_SPECIALIZE",
				"RITUAL_ACTIVATE_PORTAL",
				"QUEST_COMPLETE",
				"WEAPON_DAMAGE_NO_SCHOOL",
				"RESURRECT",
				"ADD_EXTRA_ATTACKS",
				"DODGE",
				"EVADE",
				"PARRY",
				"BLOCK",
				"CREATE_ITEM",
				"WEAPON",
				"DEFENSE",
				"PERSISTENT_AREA_AURA",
				"SUMMON",
				"LEAP",
				"ENERGIZE",
				"WEAPON_PERCENT_DAMAGE",
				"TRIGGER_MISSILE",
				"OPEN_LOCK",
				"SUMMON_CHANGE_ITEM",
				"APPLY_AREA_AURA_PARTY",
				"LEARN_SPELL",
				"SPELL_DEFENSE",
				"DISPEL",
				"LANGUAGE",
				"DUAL_WIELD",
				"EFFECT_41",
				"EFFECT_42",
				"TELEPORT_UNITS_FACE_CASTER",
				"SKILL_STEP",
				"EFFECT_45",
				"SPAWN",
				"TRADE_SKILL",
				"STEALTH",
				"DETECT",
				"TRANS_DOOR",
				"FORCE_CRITICAL_HIT",
				"GUARANTEE_HIT",
				"ENCHANT_ITEM",
				"ENCHANT_ITEM_TEMPORARY",
				"TAME_CREATURE",
				"SUMMON_PET",
				"LEARN_PET_SPELL",
				"WEAPON_DAMAGE",
				"OPEN_LOCK_ITEM",
				"PROFICIENCY",
				"SEND_EVENT",
				"POWER_BURN",
				"THREAT",
				"TRIGGER_SPELL",
				"HEALTH_FUNNEL",
				"POWER_FUNNEL",
				"HEAL_MAX_HEALTH",
				"INTERRUPT_CAST",
				"DISTRACT",
				"PULL",
				"PICK_POCKET",
				"ADD_FARSIGHT",
				"EFFECT_73",
				"EFFECT_74",
				"HEAL_MECHANICAL",
				"SUMMON_OBJECT_WILD",
				"SCRIPT_EFFECT",
				"ATTACK",
				"SANCTUARY",
				"ADD_COMBO_POINTS",
				"CREATE_HOUSE",
				"BIND_SIGHT",
				"DUEL",
				"STUCK",
				"SUMMON_PLAYER",
				"ACTIVATE_OBJECT",
				"EFFECT_87",
				"EFFECT_88",
				"EFFECT_89",
				"EFFECT_90",
				"THREAT_ALL",
				"ENCHANT_HELD_ITEM",
				"EFFECT_93",
				"SELF_RESURRECT",
				"SKINNING",
				"CHARGE",
				"EFFECT_97",
				"KNOCK_BACK",
				"DISENCHANT",
				"INEBRIATE",
				"FEED_PET",
				"DISMISS_PET",
				"REPUTATION",
				"EFFECT_104",
				"EFFECT_105",
				"EFFECT_106",
				"EFFECT_107",
				"DISPEL_MECHANIC",
				"SUMMON_DEAD_PET",
				"DESTROY_ALL_TOTEMS",
				"DURABILITY_DAMAGE",
				"RESURRECT_NEW",
				"ATTACK_ME",
				"DURABILITY_DAMAGE_PCT",
				"SKIN_PLAYER_CORPSE",
				"SPIRIT_HEAL",
				"SKILL",
				"APPLY_AREA_AURA_PET",
				"TELEPORT_GRAVEYARD",
				"NORMALIZED_WEAPON_DMG",
				"EFFECT_122",
				"SEND_TAXI",
				"PLAYER_PULL",
				"MODIFY_THREAT_PERCENT",
				"STEAL_BENEFICIAL_BUFF",
				"PROSPECTING",
				"APPLY_AREA_AURA_FRIEND",
				"APPLY_AREA_AURA_ENEMY",
				"REDIRECT_THREAT",
				"EFFECT_131",
				"PLAY_MUSIC",
				"UNLEARN_SPECIALIZATION",
				"KILL_CREDIT",
				"CALL_PET",
				"HEAL_PCT",
				"ENERGIZE_PCT",
				"LEAP_BACK",
				"CLEAR_QUEST",
				"FORCE_CAST",
				"EFFECT_141",
				"TRIGGER_SPELL_WITH_VALUE",
				"APPLY_AREA_AURA_OWNER",
				"KNOCK_BACK_2",
				"EFFECT_145",
				"EFFECT_146",
				"QUEST_FAIL",
				"EFFECT_148",
				"EFFECT_149",
				"EFFECT_150",
				"TRIGGER_SPELL_2",
				"SUMMON_FRIEND",
				"EFFECT_153"
			};

			const SpellEffectStrings spellEffectNames(strings);
		}
	}
}
